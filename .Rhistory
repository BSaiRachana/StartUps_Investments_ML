data <- read.csv("DC_Bike_Rentals.csv")
str(data)
# Factoring the categorical variables
data$season <- factor(data$season)
data$season
# Factoring the categorical variables
data$season <- factor(data$season)
max(data$season)
# Factoring the categorical variables
data$season <- factor(data$season)
str(data$season)
str(data)
# Factoring the categorical variables
data$season <- factor(data$season)
data$holiday <- factor(data$holiday)
str(data)
# Factoring the categorical variables
data$season <- factor(data$season)
data$holiday <- factor(data$holiday)
data$hour <- factor(data$hour)
str(data)
# Factoring the categorical variables
data$season <- factor(data$season)
data$holiday <- factor(data$holiday)
data$hour <- factor(data$hour)
data$workingday <- factor(data$workingday)
str(data)
# Factoring the categorical variables
data$season <- factor(data$season)
data$holiday <- factor(data$holiday)
data$hour <- factor(data$hour)
data$workingday <- factor(data$workingday)
data$weather <- factor(data$weather)
str(data)
install.packages("caret")
install.packages("tree")
?tree
??tree
install.packages("e1071")
install.packages("randomForest")
nrow(train_data)
set.seed(1000)
trainIndex <- createDataPartition(dat$count, p = .8, list = FALSE)
# All the libraries that we need
library(caret)
# All the libraries that we need
library(caret)
library(tree)
library(randomForest)
library(e1071)
dat <- read.csv("DC_Bike_Rentals.csv")
str(dat)
dat$season <- factor(dat$season)
dat$holiday <- factor(dat$holiday)
dat$hour <- factor(dat$hour)
dat$workingday <- factor(dat$workingday)
dat$weather <- factor(dat$weather)
set.seed(1000)
trainIndex <- createDataPartition(dat$count, p = .8, list = FALSE)
train_data <- dat[ trainIndex,]
test_data  <- dat[-trainIndex,]
nrow(train_data)
nrow(test_data)
#hist(dat$count,
#   main = '',
# xlab = '')
# From the histogram, we can see that the distribution of performance is very skewed to the right. Letâ€™s log transform the performance variable to see whether we can alleviate the skewness issue. Indeed, log transformation makes its distribution more normal.
# Fit a decision tree
dat_rt <- tree(log(count) ~ hour+season+holiday+workingday+weather+temp+atemp+humidity+windspeed,
data = train_data)
# Print the decision tree
summary(dat_rt)
View(train_data)
# transform the training dataset using the parameters
train_scaled <- predict(preprocessParams, train_data)
dat <- read.csv("../Dataset/US_StartUps_Investments_Data.csv")
dat <- read.csv("/Users/vineethpenugonda/Documents/Academics/Masters/Semester IV/IST 5535/Projects/StartUps_Investments_ML/Dataset/US_StartUps_Investments_Data.csv")
getwd()
dat <- read.csv("../Dataset/US_StartUps_Investments_Data.csv")
getwd()
setwd("/Users/vineethpenugonda/Documents/Academics/Masters/Semester IV/IST 5535/Projects/StartUps_Investments_ML/")
dat <- read.csv("../Dataset/US_StartUps_Investments_Data.csv")
dat <- read.csv("/Users/vineethpenugonda/Documents/Academics/Masters/Semester IV/IST 5535/Projects/StartUps_Investments_ML/Dataset/US_StartUps_Investments_Data.csv")
dat <- read.csv("/Users/vineethpenugonda/Documents/Academics/Masters/Semester IV/IST 5535/Projects/StartUps_Investments_ML/Dataset/US_StartUps_Investments_Data.csv")
dat
summary(dat)
head(dat)
clear
clear()
clrscr()
summary(dat)
sapply(dat, typeof)
View(dat)
table(sapply(dat, class))
sapply(dat,class)
dat <- gsub('\\s+', '', dat)
dat
dat <- read.csv("/Users/vineethpenugonda/Documents/Academics/Masters/Semester IV/IST 5535/Projects/StartUps_Investments_ML/Dataset/US_StartUps_Investments_Data.csv")
summary(dat)
View(dat)
sapply(dat,class)
# Replacing commas in the column - funding_total_usd
dat$funding_total_usd <- as.numeric(gsub(",","",dat$funding_total_usd))
View(dat)
dat <- read.csv("/Users/vineethpenugonda/Documents/Academics/Masters/Semester IV/IST 5535/Projects/StartUps_Investments_ML/Dataset/US_StartUps_Investments_Data.csv")
View(dat)
summary(dat)
# Print data type
sapply(dat,class)
# Replacing commas in the column - funding_total_usd
dat$funding_total_usd <- as.numeric(gsub(",","",dat$funding_total_usd))
View(dat)
# Remove rows with NAs
dat <- na.omit(dat)
View(dat)
dat <- dat[!(is.na(dat) | dat==""), ]
dat <- read.csv("/Users/vineethpenugonda/Documents/Academics/Masters/Semester IV/IST 5535/Projects/StartUps_Investments_ML/Dataset/US_StartUps_Investments_Data.csv")
summary(dat)
# Print data type
sapply(dat,class)
# Replacing commas in the column - funding_total_usd
dat$funding_total_usd <- as.numeric(gsub(",","",dat$funding_total_usd))
dat <- dat[!(is.na(dat) | dat==""), ]
View(dat)
View(dat)
dat <- dat[!(is.na(dat) | dat==""), ]
str(dat)
dat <- read.csv("/Users/vineethpenugonda/Documents/Academics/Masters/Semester IV/IST 5535/Projects/StartUps_Investments_ML/Dataset/US_StartUps_Investments_Data.csv")
str(dat)
# Replacing commas in the column - funding_total_usd
dat$funding_total_usd <- as.numeric(gsub(",","",dat$funding_total_usd))
dat <- dat[complete.cases(dat),]
View(dat)
dat <- read.csv("/Users/vineethpenugonda/Documents/Academics/Masters/Semester IV/IST 5535/Projects/StartUps_Investments_ML/Dataset/US_StartUps_Investments_Data.csv")
str(dat)
# Replacing commas in the column - funding_total_usd
dat$funding_total_usd <- as.numeric(gsub(",","",dat$funding_total_usd))
dat <- dat[complete.cases(dat),]
View(dat)
# Remove City and homepage_URL
dat$city <- NULL
dat$homepage_url <- NULL
View(dat)
dat <- read.csv("/Users/vineethpenugonda/Documents/Academics/Masters/Semester IV/IST 5535/Projects/StartUps_Investments_ML/Dataset/US_StartUps_Investments_Data.csv")
str(dat)
# Replacing commas in the column - funding_total_usd
dat$funding_total_usd <- as.numeric(gsub(",","",dat$funding_total_usd))
#dat <- dat[complete.cases(dat),]
dat <- dat[!apply(is.na(dat) | dat == "", 1, all),]
# Remove City and homepage_URL
dat$city <- NULL
dat$homepage_url <- NULL
View(dat)
dat <- dat[complete.cases(dat),]
# Remove City and homepage_URL
dat$city <- NULL
dat$homepage_url <- NULL
View(dat)
